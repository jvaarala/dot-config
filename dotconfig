# --------------------------
# "plugins"
options=()
for file in "./plugins"/*; do
  if [ -f "$file" ]; then
    # shellcheck source=./plugins
    source "$file"
    filename=$(basename "$file")
    options+=("${filename%.*}")
  fi
done

# --------------------------
# Actual script starts here
if [ $# -lt 1 ] || { [ "$1" != "install" ] && [ "$1" != "uninstall" ] && [ "$1" != "create" ]; } || { [ "$1" = "create" ] && [ $# -ne 2 ]; }; then
  echo "Usage: $0 {install|uninstall|create <string>}"
  exit 1
elif [ "$1" = "create" ]; then

  input_string="$2"
  filename=$(echo "$input_string" | tr ' ' '_')
  file_path="./plugins/$filename"

  cat <<EOL >"$file_path"
install_$filename() {

}

uninstall_$filename() {

}
EOL

  echo "Plugin template created at $file_path"
  exit 1
fi

# --------------------------
# Menu

selected=()

cursorIndex=0

display_menu() {
  clear
  echo ""
  for index in "${!options[@]}"; do
    selected_contains=false
    for s in "${selected[@]}"; do
      if [[ "$s" =~ ^[0-9]+$ ]] && [ "$s" -eq "$index" ]; then
        selected_contains=true
        break
      fi
    done

    if [ "$index" -eq "$cursorIndex" ]; then
      if $selected_contains; then
        final_string="  \033[1;32m>\033[0m \033[1;32m${options[index]}\033[0m"
      else
        final_string="  \033[1;32m>\033[0m ${options[index]}"
      fi
    else
      if $selected_contains; then
        final_string="  \033[1;32m  ${options[index]}\033[0m"
      else
        final_string="    ${options[index]}"
      fi
    fi

    echo "${final_string//_/ }"

  done

  echo ""
  echo "   [k] up  [l] down  [i] select  [q] quit  [enter] confirm"
}

while true; do
  display_menu

  read -rsn1 key
  case "$key" in
  'q')
    exit 0
    ;;

  # k - move cursor up
  k)
    ((cursorIndex--))
    if ((cursorIndex < 0)); then
      cursorIndex=$((${#options[@]} - 1))
    fi
    ;;

  # l - move cursor down
  l)
    ((cursorIndex++))
    if ((cursorIndex >= ${#options[@]})); then
      cursorIndex=0
    fi
    ;;

  # i - select option
  i)
    selected_contains=false
    for s in "${selected[@]}"; do
      if [[ "$s" -eq "$cursorIndex" ]]; then
        selected_contains=true
        break
      fi
    done

    if $selected_contains; then
      # Remove from the selected array
      selected=("${selected[@]/$cursorIndex/}")
    else
      # Add to the selected array
      selected+=("$cursorIndex")
    fi

    # Filter out empty elements
    filtered_selected=()
    for s in "${selected[@]}"; do
      if [[ -n "$s" ]]; then
        filtered_selected+=("$s")
      fi
    done
    selected=("${filtered_selected[@]}")
    ;;

    # Enter to confirm selection
  "")
    break
    ;;
  *) ;;

  esac
done

sorted_selected=()
# Sort the selected array in same order as the options array
for i in "${!options[@]}"; do
  for j in "${selected[@]}"; do
    if [[ "$i" -eq "$j" ]]; then
      sorted_selected+=("$i")
    fi
  done
done

for i in "${sorted_selected[@]}"; do
  function_name="${1}_${options[i]}"
  if declare -f "$function_name" >/dev/null; then
    eval "$function_name"
  else
    echo "Function $function_name not found"
  fi
done
